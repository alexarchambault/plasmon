name: CI
on:
  push:
    branches:
    - main
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/setup-action@v1
      with:
        apps: sbt scala-cli
        jvm: 17
    - name: Test
      run: ./mill -i integration.test.testForked
    - name: Diff
      run: |
        git diff
        git diff-index HEAD --quiet || ( echo "Some test data differ"; exit 1 )

  format:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - uses: coursier/setup-action@v1
      with:
        jvm: 21
        apps: scalafmt
    - run: scalafmt --check
    - name: Check native-image config format
      run: ./mill -i __.checkNativeImageConfFormat

  native-test:
    strategy:
      fail-fast: false
      matrix:
        OS: ["ubuntu-latest"]
        OS_SHORT: ["linux"]
        include:
          - OS: "windows-latest"
            OS_SHORT: "windows"
          - OS: "macos-13"
            OS_SHORT: "mac"
          - OS: "macos-14"
            OS_SHORT: "mac-arm"
          - OS: "ubuntu-24.04-arm"
            OS_SHORT: "linux-arm"
    runs-on: ${{ matrix.OS }}
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/setup-action@v1
      with:
        apps: sbt scala-cli
        jvm: 17
    - name: Prepare for native image
      run: ./mill -i server.native.writeNativeImageScript0 --scriptDest generate-native-image.sh
    - name: Generate native image
      run: bash ./generate-native-image.sh
    - name: Test
      run: ./mill -i integration.native.testForked
    - name: Diff
      shell: bash
      run: |
        git diff
        git diff-index HEAD --quiet || ( echo "Some test data differ"; exit 1 )
    - name: Copy artifacts
      run: ./mill copyLauncher --directory artifacts/
    - uses: actions/attest-build-provenance@v3
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        subject-path: 'artifacts/*'
    - uses: actions/upload-artifact@v4
      with:
        name: launchers-${{ matrix.OS_SHORT }}
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  publish:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
    - uses: coursier/setup-action@v1
    - name: Publish
      run: ./mill -i mill.scalalib.SonatypeCentralPublishModule/
      env:
        MILL_PGP_SECRET_BASE64: ${{ secrets.PUBLISH_SECRET_KEY }}
        MILL_PGP_PASSPHRASE: ${{ secrets.PUBLISH_SECRET_KEY_PASSWORD }}
        MILL_SONATYPE_USERNAME: ${{ secrets.PUBLISH_USER }}
        MILL_SONATYPE_PASSWORD: ${{ secrets.PUBLISH_PASSWORD }}

  generate-jar-launcher:
    name: Upload JAR launcher
    needs: publish
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/setup-action@v1
      with:
        jvm: 17
    - name: Wait for sync to Central
      run: ./mill -i ci.waitForSync
    - name: Copy artifacts
      run: ./mill -i ci.copyJarLaunchers
    - uses: actions/attest-build-provenance@v3
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        subject-path: 'artifacts/*'
    - uses: actions/upload-artifact@v4
      with:
        name: launchers-jar
        path: artifacts/
        if-no-files-found: error
        retention-days: 2

  upload-launchers:
    name: Upload launchers to GitHub release assets
    needs: [test, native-test]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/setup-action@v1
      with:
        jvm: 17
    - uses: actions/download-artifact@v5
      with:
        name: launchers-linux
        path: artifacts/
    - uses: actions/download-artifact@v5
      with:
        name: launchers-linux-arm
        path: artifacts/
    - uses: actions/download-artifact@v5
      with:
        name: launchers-windows
        path: artifacts/
    - uses: actions/download-artifact@v5
      with:
        name: launchers-mac
        path: artifacts/
    - uses: actions/download-artifact@v5
      with:
        name: launchers-mac-arm
        path: artifacts/
    - uses: actions/download-artifact@v5
      with:
        name: launchers-jar
        path: artifacts/
    - run: ./mill -i ci.uploadLaunchers --directory artifacts/
      env:
        UPLOAD_GH_TOKEN: ${{ secrets.GH_TOKEN }}
